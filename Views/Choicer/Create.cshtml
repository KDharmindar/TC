@model tutioncloud.Models.Choicer

@{
    ViewBag.Title = "Create";
    Layout = "../Shared/_Layout_Choicer_Admin.cshtml";

}

<br />
<br />

<h4>Choicer - Create</h4>
<hr />
@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
         {
             Text = "Option1",
             Value = "1"
         });
    listItems.Add(new SelectListItem
         {
             Text = "Option2",
             Value = "2"
         });
    listItems.Add(new SelectListItem
         {
             Text = "Option3",
             Value = "3"
         });
    listItems.Add(new SelectListItem
    {
        Text = "Option4",
        Value = "4"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Option5",
        Value = "5"
    });
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    

        @*<div class="form-group">
            @Html.LabelFor(model => model.FCUserID, "FCUserID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Hidden("FCUserID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FCUserID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.Label("Question", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CQuestion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CQuestion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Option 1", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opt1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opt1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Option 2", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opt2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opt2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Option 3", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opt3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opt3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Option 4", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opt4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opt4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Option 5", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opt5, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opt5, "", new { @class = "text-danger" })
            </div>
        </div>

       


        <div class="form-group">
            @Html.Label("Select Correct Answer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CAnswer, listItems, "-- Select Correct Option --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CAnswer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Select Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FCategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="chek">
            @Html.Label("Share Online", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.IsShareOnline)
                @Html.ValidationMessageFor(model => model.IsShareOnline, "", new { @class = "text-danger" })*@
                <input id="responsable" name="checkResp" value="true" type="checkbox" />

            </div>
        </div>

        @*<div class="form-group">
            @Html.Label("Share Online", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsShareOnline)
                    @Html.ValidationMessageFor(model => model.IsShareOnline, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.IsFavourite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsFavourite)
                    @Html.ValidationMessageFor(model => model.IsFavourite, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsSkip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsSkip)
                    @Html.ValidationMessageFor(model => model.IsSkip, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Appearance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Appearance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Appearance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WAppearance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WAppearance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WAppearance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Score, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AdditionalInfo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdditionalInfo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdditionalInfo, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
