@model tutioncloud.Models.Choicer

@{
    ViewBag.Title = "Answer";
    Layout = "../Shared/_Layout_Choicer_Admin.cshtml";

}
<style>
   .mystyle 
   {
       font-size: larger;
       background-color:green;
       /*color:red*/

   }


</style>
<br />
<br />

<h4>Choicer - Answer</h4>
<br />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ChoicerID)

        @*<div class="form-group">
                @Html.LabelFor(model => model.FCategoryID, "FCategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("FCategoryID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FCategoryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FCUserID, "FCUserID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("FCUserID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FCUserID, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.Label("Question", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.CQuestion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CQuestion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opt1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Opt1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opt1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opt2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Opt2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opt2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opt3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Opt3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opt3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opt4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Opt4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opt4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opt5, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Opt5, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opt5, "", new { @class = "text-danger" })
            </div>
        </div>
            @Html.Label("Correct Answer", htmlAttributes: new { @class = "control-label col-md-2" })
                @{
    var ans = Model.CAnswer;
    if (ans != null)
    {
        if (ans == 1)
        {

            @Html.DisplayFor(model => model.Opt1)
        }
        else if (ans == 2)
        {
            @Html.DisplayFor(model => model.Opt2)
        }
        else if (ans == 3)
        {
            @Html.DisplayFor(model => model.Opt3)
        }
        else if (ans == 4)
        {
            @Html.DisplayFor(model => model.Opt4)
        }
        else if (ans == 5)
        {
            @Html.DisplayFor(model => model.Opt5)
        }

    }

    else
    {
        @Html.Label("You have selected no answer")
    }

                }
          

                @*<img src="~/images/tick1.png">*@

                @*<div class="form-group">
                        @Html.Label("Correct Option :", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                           @Html.Display(result,"", new { style = "color:green" })

                            &nbsp;&nbsp;&nbsp;

                            @Html.ValidationMessageFor(model => model.CAnswer, "", new { @class = "text-danger" })
                        </div>

                    </div>*@

                @* <div class="form-group">
                        @Html.LabelFor(model => model.IsShareOnline, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsShareOnline)
                                @Html.ValidationMessageFor(model => model.IsShareOnline, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsFavourite, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsFavourite)
                                @Html.ValidationMessageFor(model => model.IsFavourite, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsSkip, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsSkip)
                                @Html.ValidationMessageFor(model => model.IsSkip, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Appearance, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Appearance, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Appearance, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.WAppearance, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.WAppearance, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WAppearance, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Score, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AdditionalInfo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AdditionalInfo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AdditionalInfo, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @*<div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>*@
            </div>
            }

            @*<div>
                    @Html.ActionLink("Back to List", "Index")
                </div>*@

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
